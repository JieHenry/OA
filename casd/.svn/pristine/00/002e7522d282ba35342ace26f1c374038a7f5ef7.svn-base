package com.casd.serviceimpl.manage;


import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.activiti.engine.TaskService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.casd.controller.web.Ref;
import com.casd.dao.manage.NoticeDao;
import com.casd.entity.manage.Notice;
import com.casd.entity.uc.User;
import com.casd.service.hr.ActivitiService;
import com.casd.service.manage.NoticeService;
@Service
public class NoticeServiceImpl implements NoticeService{
	@Autowired
    private NoticeDao noticeDao;
	@Autowired
    private ActivitiService activitiService;
	@Autowired
	private TaskService  taskService;
	
	
	
	@Transactional
	public int savaNotice(HttpServletRequest request) throws Exception{
		
		String cid=request.getParameter("bizId");
		
		
		if(cid==null){
					
	
		String delIds=request.getParameter("delIds");// 公司集合
		String content=request.getParameter("content");// 发文内容		
		User user=(User) request.getSession().getAttribute("loginUser");//当前办理人
		String	userid=user.getUserid()+"";
		 SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");//设置日期格式
	    Notice notice=new Notice();
	    notice.setNotice_content(content);
	    notice.setCompany_id(delIds);
	    notice.setStatus(1);
	    notice.setStart_time(df.format(new java.util.Date()));
	    notice.setUser_id(user.getUserid()+"");  
		noticeDao.savaNotice(notice);


	   String processDefinitioKey = "notice_view"; // 定义流程的key,不可修改
			String title = "发布通知"; // 请注意
			String bizId = processDefinitioKey + "."
					+ notice.getNotice_id(); // 获取业务id
		
		activitiService.startProcesses(bizId, userid, processDefinitioKey, title);
		 
		  }
		 
			
			return 0;
	}

	@Override
	public List<Map<String, Object>> noticeList(int page, int pageSize,
			Ref<Integer> record, String fields,String where) throws Exception {
		
		
		
		Map<String, Object> param=new HashMap<String, Object>();
        param.put("fields", fields);
        param.put("where", where);
      
		   if (record != null) {
				Integer count=noticeDao.getNoticeCount(param);
				record.setValue(count);
			}
		   
		 //分页
		   
		   if (pageSize <= 0)
				throw new Exception("pageSize 必须 > 0");

		          param.put("limit", String.format("limit %1$s,%2$s", page < 0 ? 0 : page
					* pageSize, pageSize));
		return noticeDao.noticeList(param);
	}

	@Transactional
	public void notice_pass(HttpServletRequest request){
		Map<String, Object> vars=new HashMap<String, Object>();
		  String taskid=request.getParameter("taskid");
	
		  User user=(User) request.getSession().getAttribute("loginUser");//当前办理人
		  String username=user.getUserid()+"";
		  
		  
	
		String taskName=request.getParameter("taskName");
		String nextUser=request.getParameter("userid");//下一个审核人
		String options=request.getParameter("options");//获取审核意见
				
		if (taskName.equals("起草")){
	       vars.put("sign","true");
	       vars.put("fwhd", nextUser);	
		}else if(taskName.equals("发文核对")){
			  vars.put("shqf", nextUser);	
		}else if(taskName.equals("审核签发")){
			String bizkey = activitiService.getBusinessBizId(taskid);// 获取业务编号
			String[] strs = bizkey.split("\\.");
			String bizId = null; // 业务编号
			for (int i = 0, len = strs.length; i < len; i++) {
				bizId = strs[i].toString();
			}
			Notice notice=new Notice();
			notice.setStatus(3);
			notice.setNotice_id(Integer.valueOf(bizId));
			noticeDao.updateNotice(notice);			
		}
		
         	taskService.claim(taskid,username);
		    taskService.complete(taskid,vars);
		
	}

	@Transactional
	public void updete(Notice notice) {
		noticeDao.updateNotice(notice);		
		
	}
	
	public void deleteNotice() {
		
	}

}
