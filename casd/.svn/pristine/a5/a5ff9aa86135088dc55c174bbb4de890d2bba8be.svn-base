package com.casd.controller.manage;

import java.sql.Date;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.activiti.engine.impl.bpmn.data.Data;
import org.apache.ibatis.annotations.Param;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.config.MvcNamespaceHandler;

import com.casd.controller.web.Ref;
import com.casd.entity.manage.AchReview;
import com.casd.entity.manage.SupOpinion;
import com.casd.service.finance.MaterialService;
import com.casd.service.hr.ActivitiService;
import com.casd.service.manage.AchReviewService;
import com.casd.service.manage.SupOpinionService;
import com.casd.service.uc.UserService;

@Controller
@RequestMapping("/admin")
public class SupOpinionController {

	@Autowired
	private SupOpinionService supOpinionService;
	@Autowired
	private ActivitiService activitiService;
	@Autowired
	private UserService userService;
	
	/**
	 *  监察意见列表
	 * 
	 * */
	@RequestMapping(value = "/supOpinionList", method = RequestMethod.GET)
	public ModelAndView supOpinionList() {
		ModelAndView mv = new ModelAndView();
		mv.setViewName("manage/supOpinionList");
		return mv;

	}

	@RequestMapping(value = "/supOpinionList", method = RequestMethod.POST)
	@ResponseBody
	public Map<String, Object> supOpinionList(HttpServletRequest request)
			throws Exception {
		Map<String, Object> jsonMap = new HashMap<String, Object>();

		
		StringBuilder sBuilder = new StringBuilder();
		int pageSize = Integer.parseInt(request.getParameter("rows"));
		int pageIndex = Integer.parseInt(request.getParameter("page")) - 1;
		Ref<Integer> record = new Ref<Integer>();
		String fields = "*";
		sBuilder.append(" manage_supopinion ");
		sBuilder.append(" where 1=1");
		
		String supOpinion_company = request.getParameter("supOpinion_company");
		if (StringUtils.hasText(supOpinion_company)) {
			sBuilder.append(" and supOpinion_company like '%" + supOpinion_company + "%'");
		}
		String supOpinion_title = request.getParameter("supOpinion_title");
		if (StringUtils.hasText(supOpinion_title)) {
			sBuilder.append(" and supOpinion_title like '%" + supOpinion_title + "%'");
		}

		List<Map<String, Object>> data = supOpinionService.supOpinionList(pageIndex,
				pageSize, record, fields, sBuilder.toString());
		jsonMap.put("rows", data);
		jsonMap.put("total", record.getValue());

		return jsonMap;

	}

	
	
	/**
	 *  监察意见新增界面,修改界面
	 * @throws Exception 
	 * 
	 * */
	@RequestMapping(value = "/supOpinionNew", method = RequestMethod.GET)
	public ModelAndView supOpinionNew(HttpServletRequest request ,Model model) throws Exception {
		ModelAndView mv = new ModelAndView();
		List<Map<String, Object>> data=new ArrayList<Map<String,Object>>();
		
		//查询审核人
		List<Map<String, Object>> userList=supOpinionService.supOpinionUser("提交申请","supOpinionView");
		
		if (request.getParameter("supOpinion_id")!="") {
			int supOpinion_id = Integer.valueOf(request.getParameter("supOpinion_id").toString());
			Map<String, Object> map=new HashMap<String, Object>();
			map.put("supOpinion_id", supOpinion_id);
			data= supOpinionService.getData(map);
			model.addAttribute("data", data.get(0));
			mv.addObject("edit", false);
		}else {
			mv.addObject("edit", true);
		}
		model.addAttribute("userList", userList);
		mv.setViewName("manage/supOpinionNew");
		return mv;

	}
	/**
	 *  监察意见查看界面
	 * 
	 * */
	@RequestMapping(value = "/supOpinionView", method = RequestMethod.GET)
	@ResponseBody
	public ModelAndView supOpinionView(HttpServletRequest request ,Model model) {
		int supOpinion_id = Integer.valueOf(request.getParameter("bizId").toString());
		Map<String, Object> map=new HashMap<String, Object>();
		map.put("supOpinion_id", supOpinion_id);
		List<Map<String, Object>> data= supOpinionService.getData(map);
		model.addAttribute("data", data.get(0));
		ModelAndView mv = new ModelAndView();
		mv.setViewName("manage/supOpinionView");
		return mv;
	}
	
	/**
	 *  监察意见删除
	 * 
	 * */
	@RequestMapping(value = "/delect_supOpinion", method = RequestMethod.POST)
	@ResponseBody
	public Map<String, Object> delect_supOpinion(HttpServletRequest request) {
		String supOpinion_id = request.getParameter("supOpinion_id");
		Map<String, Object> json = new HashMap<String, Object>();

		try {
			Map<String, Object> map=new HashMap<String, Object>();
			StringBuffer sbf = new StringBuffer();
			sbf.append(" manage_supopinion where supOpinion_id=" + supOpinion_id);
			map.put("where", sbf);
			supOpinionService.delete_data(map);

		} catch (Exception e) {
			json.put("msg", "删除失败!");
			e.printStackTrace();
		}

		return json;

	}
	
	
	
	/**
	 *   监察意见保存
	 * 
	 * */
	@RequestMapping(value = "/save_supOpinion", method = RequestMethod.POST)
	@ResponseBody
	public Map<String, Object> save_supOpinion(HttpServletRequest request)
			throws Exception {
		Map<String, Object> json=new HashMap<String, Object>();
		try {
			
	
		SupOpinion supOpinion=new SupOpinion();
		String username=request.getParameter("username");
		if (request.getParameter("supOpinion_id")=="") {
			Date date=new Date(System.currentTimeMillis());
			supOpinion.setSupOpinion_id(0);
			supOpinion.setSupOpinion_creatDate(date);
		}else {
			Date date=new Date(System.currentTimeMillis());
			supOpinion.setSupOpinion_creatDate(date);//要修改
			supOpinion.setSupOpinion_id(Integer.valueOf(request.getParameter("supOpinion_id").toString()));
		}
		
		supOpinion.setSupOpinion_company(request.getParameter("supOpinion_company"));
		supOpinion.setSupOpinion_supProblem(request.getParameter("supOpinion_supProblem"));
		supOpinion.setSupOpinion_supPropose(request.getParameter("supOpinion_supPropose"));
		supOpinion.setSupOpinion_praiOrPun(request.getParameter("supOpinion_praiOrPun"));
		supOpinion.setSupOpinion_selfEva(request.getParameter("supOpinion_selfEva"));
		supOpinion.setSupOpinion_result(request.getParameter("supOpinion_result"));
		supOpinion.setSupOpinion_title(request.getParameter("supOpinion_title"));

		supOpinionService.save_supOpinion(supOpinion,username);
		json.put("Success", true);
		json.put("Msg", "已提交!");
	} catch (Exception e) {
		e.printStackTrace();
		json.put("Success", false);
		json.put("Msg", "程序出错,请联系技术员");
		}
		return json;
		
	}
	
	@RequestMapping(value = "/supOpinionAut", method = RequestMethod.GET)
	public Object supOpinionAut(@Param("taskid")String taskid,String taskName) throws Exception{
		ModelAndView mv = new ModelAndView();

		String bizkey = activitiService.getBusinessBizId(taskid);// 获取业务编号

		String[] strs = bizkey.split("\\.");
		String bizId = null; // 业务编号
		for (int i = 0, len = strs.length; i < len; i++) {
			bizId = strs[i].toString();
		}
		Map<String, Object> map=new HashMap<String, Object>();
		map.put("supOpinion_id", bizId);
		List<Map<String, Object>> data= supOpinionService.getData(map);
		mv.addObject("data", data.get(0));
		
	/*	String  fields="a.username"; 
		String  where="uc_user a JOIN uc_role b on a.role_id=b.role_id WHERE b.role_name='监察中心经理'"; 
        Map<String, Object> userlist=userService.queryUserById(fields, where);
		mv.addAllObjects(userlist);*/
		
		mv.addObject("taskid", taskid);
		mv.addObject("taskName", taskName);
		mv.setViewName("manage/supOpinionAut");
		
		return mv;
		
		
	}
	@RequestMapping(value = "/sava_opinionAut", method = RequestMethod.POST)
	@ResponseBody
	public Object  sava_opinionAut(HttpServletRequest request) {
	 Map<String, Object> json=new HashMap<String, Object>();
		try {
		supOpinionService.sava_opinionAut(request);
		json.put("Success", true);
		json.put("Msg", "已审核!");
	} catch (Exception e) {
		e.printStackTrace();
		json.put("Success", false);
		json.put("Msg", "程序出错,请联系技术员");	
		}
		return json;
	}
	@RequestMapping(value = "/noticeList", method = RequestMethod.GET)
	@ResponseBody
	public ModelAndView noticeList() {
		ModelAndView mv = new ModelAndView();
		mv.setViewName("manage/noticeList");
		return mv;
		
		
	}
}
