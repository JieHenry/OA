package com.casd.controller.construct;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.activiti.engine.task.Comment;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFPrintSetup;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.hssf.util.CellRangeAddress;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.commons.CommonsMultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.casd.controller.web.Ref;
import com.casd.entity.construct.Construct;
import com.casd.entity.construct.ConstructDep;
import com.casd.entity.construct.PurchaseHead;
import com.casd.entity.uc.User;
import com.casd.service.construct.APartyService;
import com.casd.service.construct.ConstructService;
import com.casd.service.construct.PurchaseService;
import com.casd.service.hr.ActivitiService;
import com.casd.service.uc.UserService;


@Controller
@RequestMapping("/admin")
public class APartyController {
	
	@Autowired
	private ConstructService constructService;
	@Autowired
	private APartyService aPartyService;
	
	/**
	 * 建设公司项目list
	 */
	@RequestMapping(value = "/aPartyConList", method = RequestMethod.GET)
	public ModelAndView aPartyConList(HttpServletRequest request) {
		ModelAndView mv = new ModelAndView();
		mv.setViewName("construct/aPartyConList");
		return mv;
	}

	@RequestMapping(value = "/aPartyConList", method = RequestMethod.POST)
	@ResponseBody
	public Map<String, Object> aPartyConList(HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		Ref<Integer> record = new Ref<Integer>();
		Map<String, Object> json = new HashMap<String, Object>();
		StringBuffer sbf = new StringBuffer();
		sbf.append(" construct_project_table pro left join construct_project_dep dep on dep.constuct_project_dep_id=pro.construct_project_dep where dep.constuct_project_dep_company=1  ");
		String construct_project_name = request.getParameter("construct_project_name");
		if (StringUtils.hasText(construct_project_name)) {
			sbf.append(" and pro.construct_project_name like '%" + construct_project_name
					+ "%'");
		}
		
		int pageSize = Integer.parseInt(request.getParameter("rows"));
		int pageIndex = Integer.parseInt(request.getParameter("page")) - 1;
		
		
		List<Map<String, Object>> data = constructService.constructList(
				pageIndex, pageSize, record, sbf.toString());

		json.put("rows", data);
		json.put("total", record.getValue());
		return json;

	}
	    
	
	/**
	 * 甲供材料list
	 */
	@RequestMapping(value = "/aPartyMaterialList", method = RequestMethod.GET)
	public ModelAndView aPartyMaterialList(HttpServletRequest request) {
		ModelAndView mv = new ModelAndView();
		mv.setViewName("construct/aPartyMaterialList");
		return mv;
	}
	@RequestMapping(value = "/aPartyMaterialList", method = RequestMethod.POST)
	@ResponseBody
	public Map<String, Object> aPartyMaterialList(HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		Ref<Integer> record = new Ref<Integer>();
		Map<String, Object> json = new HashMap<String, Object>();
		StringBuffer sbf = new StringBuffer();
		sbf.append(" construct_aparty_material  where construct_Aparty_material_constructId="+request.getParameter("construct_project_id")+"");
		String construct_project_name = request.getParameter("construct_project_name");
		if (StringUtils.hasText(construct_project_name)) {
			sbf.append(" and pro.construct_project_name like '%" + construct_project_name
					+ "%'");
		}
		
		int pageSize = Integer.parseInt(request.getParameter("rows"));
		int pageIndex = Integer.parseInt(request.getParameter("page")) - 1;
		
		
		List<Map<String, Object>> data = aPartyService.getList(
				pageIndex, pageSize, record, sbf.toString());

		json.put("rows", data);
		json.put("total", record.getValue());
		return json;

	}
	
	
	/**
	 * 订单list
	 */
	@RequestMapping(value = "/aPartyPurList", method = RequestMethod.GET)
	public ModelAndView aPartyPurList(HttpServletRequest request) {
		ModelAndView mv = new ModelAndView();
		mv.addObject("construct_project_id", request.getParameter("construct_project_id"));
		mv.setViewName("construct/aPartyPurList");
		return mv;
	}
	@RequestMapping(value = "/aPartyPurList", method = RequestMethod.POST)
	@ResponseBody
	public Map<String, Object> aPartyPurList(HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		Ref<Integer> record = new Ref<Integer>();
		Map<String, Object> json = new HashMap<String, Object>();
		StringBuffer sbf = new StringBuffer();
		sbf.append(" construct_aparty_purchase  where construct_Aparty_purchase_constructId="+request.getParameter("construct_project_id")+"");
		String construct_project_name = request.getParameter("construct_project_name");
		if (StringUtils.hasText(construct_project_name)) {
			sbf.append(" and pro.construct_project_name like '%" + construct_project_name
					+ "%'");
		}
		
		int pageSize = Integer.parseInt(request.getParameter("rows"));
		int pageIndex = Integer.parseInt(request.getParameter("page")) - 1;
		
		
		List<Map<String, Object>> data = aPartyService.getList(
				pageIndex, pageSize, record, sbf.toString());

		json.put("rows", data);
		json.put("total", record.getValue());
		return json;

	}
	/**
	 * 添加订单明细
	 */
	@RequestMapping(value = "/aPartyPurNew", method = RequestMethod.GET)
	public ModelAndView aPartyPurEntry(HttpServletRequest request) {
		ModelAndView mv = new ModelAndView();
		mv.setViewName("construct/aPartyPurNew");
		return mv;
	}
	@RequestMapping(value = "/aPartyPurNew", method = RequestMethod.POST)
	@ResponseBody
	public Map<String, Object> aPartyPurNew(HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		Ref<Integer> record = new Ref<Integer>();
		Map<String, Object> json = new HashMap<String, Object>();
		StringBuffer sbf = new StringBuffer();
		sbf.append(" construct_aparty_material  where construct_Aparty_material_constructId="+request.getParameter("construct_project_id")+"");
		String construct_project_name = request.getParameter("construct_project_name");
		if (StringUtils.hasText(construct_project_name)) {
			sbf.append(" and pro.construct_project_name like '%" + construct_project_name
					+ "%'");
		}
		
		int pageSize = Integer.parseInt(request.getParameter("rows"));
		int pageIndex = Integer.parseInt(request.getParameter("page")) - 1;
		
		
		List<Map<String, Object>> data = aPartyService.getList(
				pageIndex, pageSize, record, sbf.toString());

		json.put("rows", data);
		json.put("total", record.getValue());
		return json;

	}
}
