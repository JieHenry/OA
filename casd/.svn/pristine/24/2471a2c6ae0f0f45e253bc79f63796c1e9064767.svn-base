package com.casd.serviceimpl.finance;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.casd.controller.web.Ref;
import com.casd.dao.finance.MaterialDao;
import com.casd.entity.finance.Material;
import com.casd.entity.finance.MaterialModel;
import com.casd.entity.finance.MaterialSeries;
import com.casd.service.finance.MaterialService;

@Service
public class MaterialServiceImpl implements MaterialService{

	@Autowired
	private MaterialDao materialDao;
	
	@Override
	public List<Map<String, Object>> materialList(int page, int pageSize,
			Ref<Integer> record, String where) throws Exception {
		Map<String, Object> param = new HashMap<String, Object>();

		param.put("where", where);

		if (record != null) {
			Integer count = materialDao.getMaterialCount(param);
			record.setValue(count);
		}
		// 分页
		if (pageSize <= 0)
			throw new Exception("pageSize 必须 > 0");

		param.put("limit", String.format("limit %1$s,%2$s", page < 0 ? 0 : page
				* pageSize, pageSize));

		return materialDao.materialList(param);
	}

	@Override
	@Transactional
	public void addMaterial(Material material) {
		
		
     materialDao.addMaterial(material);
	           
	        
	}

	@Override
	public List<Map<String, Object>> getMaterialById(int page, int pageSize,
			Ref<Integer> record, String where) throws Exception {
	    
		Map<String, Object> param = new HashMap<String, Object>();

		param.put("where", where);

		if (record != null) {
			Integer count = materialDao.getCountModel(param);
			record.setValue(count);
		}
		// 分页
		if (pageSize <= 0)
			throw new Exception("pageSize 必须 > 0");

		param.put("limit", String.format("limit %1$s,%2$s", page < 0 ? 0 : page
				* pageSize, pageSize));

		return materialDao.getMaterialById(param);
	}
    
	@Override
	public Map<String, Object> editmaterial(MaterialModel materialModel) {
		

		materialDao.addMaterialModel(materialModel);
		return null;
	}

	@Override
	public void delete(String where) throws Exception{
		Map<String, Object> map=new HashMap<String, Object>();
		map.put("where", where);
		materialDao.deleteMateria(map);
	}

	@Override
	public void deletemt(String where) {
		Map<String, Object>map=new HashMap<String, Object>();
		map.put("where", where);
		
		materialDao.deletemultiple(map);
	}

	@Override
	@Transactional
	public void saveSeries(MaterialSeries materialSeries) {
		// TODO Auto-generated method stub
		materialDao.saveSeries(materialSeries);
	}

	@Override
	public List<Map<String, Object>> selectData(String fields, String sbf) {
		// TODO Auto-generated method stub
		List<Map<String, Object>> dataList=new ArrayList<Map<String,Object>>();
		Map<String, Object> map=new HashMap<String, Object>();
		map.put("fields", fields);
		map.put("where", sbf);
		dataList=materialDao.selectData(map);
		return dataList;
	}

	@Override
	public void delete_Series(String where) {
		Map<String, Object> map=new HashMap<String, Object>();
		map.put("where", where);
		materialDao.delete_Series(map);
		
	}

	
	

}
